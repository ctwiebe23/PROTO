#!/bin/bash

# +--------------------------------------------------------------------------+
# |                                                                          |
# |                                B A P C A T                               |
# |                                    --                                    |
# |                   - [ a BASH-based Python concater ] -                   |
# |                                    --                                    |
# |             AUTHOR : Carston Wiebe (cwiebe3@huskers.unl.edu)             |
# |                                                                          |
# +--------------------------------------------------------------------------+
#
# BAPCAT will take a collection of individual python files and combine them
# into one amalgamation of a file that contains the contents of each of its
# constituents in their entirety, with minor editing and reformatting to ensure
# the final "library-like archive file" will run
#
# using this tool, we can write code as you would normally-- one class to a
# file, with good file structure that ensures we aren't trawling through 200
# lines of unrelated code to find what we're interested in, while still
# producing a single, runnable file that we can install onto a PI easily
#
# in short, this script cats each file into one mother file with all import
# statements placed at the start of the final output and preceded by a short
# preamble

HOST='../CIRCUITPY/lib/make.py'
CONSTITUENTS=( $(ls | grep '.py$' | grep -v "^$HOST$") )

# don't overwrite anything you don't want to
if [ ! -f 'bapcat' ]
then
  read -p 'are you sure you are in the right directory? (y/n) ' ANS
  [ ! "$ANS" = 'y' ] && echo 'terminating program' && exit 1
fi

function WARN {
  echo '# FYI: this code was auto-generated by BAPCAT as a pseudo-library from'
  echo '#   its individual parts and should not be treated as the source code.'
  echo "# Built on: $(date -Iminutes)"
}

# merge constituents,
#   search for headers,
#   order headers,
#   purge duplicates,
#   purge interfile connections
#   push to HEAD
cat "${CONSTITUENTS[@]}" \
  | grep -E ^'import'\|^'from' \
  | sort \
  | uniq \
  | grep -v '*' \
  > HEAD#

# merge constituents, ignore headers and comments, push to TAIL
cat "${CONSTITUENTS[@]}" | grep -Ev ^'import'\|^'from'\|^'#' > TAIL#

# push warning, HEAD, and TAIL to host
WARN | cat - HEAD# TAIL# > "$HOST"

# these files have outlived their usefulness to us
[ -f 'HEAD#' ] && rm HEAD#
[ -f 'TAIL#' ] && rm TAIL#

exit 0
